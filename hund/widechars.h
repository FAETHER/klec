/*
 * This file was generated by a script using these files:
 * http://www.unicode.org/Public/UCD/latest/ucd/EastAsianWidth.txt
 * http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt
 * These files belong to Unicode. You can find the license here:
 * http://www.unicode.org/copyright.html
 * or here:
 * http://www.unicode.org/terms_of_use.html
 */

#ifndef WIDECHARS_H
#define WIDECHARS_H

// A sorted list of ranges of Unicode codepoints of double-width characters
static const unsigned int double_width[][2] = {
	{0x1100, 0x115F},
	{0x231A, 0x231B},
	{0x2329, 0x2329},
	{0x232A, 0x232A},
	{0x23E9, 0x23EC},
	{0x23F0, 0x23F0},
	{0x23F3, 0x23F3},
	{0x25FD, 0x25FE},
	{0x2614, 0x2615},
	{0x2648, 0x2653},
	{0x267F, 0x267F},
	{0x2693, 0x2693},
	{0x26A1, 0x26A1},
	{0x26AA, 0x26AB},
	{0x26BD, 0x26BE},
	{0x26C4, 0x26C5},
	{0x26CE, 0x26CE},
	{0x26D4, 0x26D4},
	{0x26EA, 0x26EA},
	{0x26F2, 0x26F3},
	{0x26F5, 0x26F5},
	{0x26FA, 0x26FA},
	{0x26FD, 0x26FD},
	{0x2705, 0x2705},
	{0x270A, 0x270B},
	{0x2728, 0x2728},
	{0x274C, 0x274C},
	{0x274E, 0x274E},
	{0x2753, 0x2755},
	{0x2757, 0x2757},
	{0x2795, 0x2797},
	{0x27B0, 0x27B0},
	{0x27BF, 0x27BF},
	{0x2B1B, 0x2B1C},
	{0x2B50, 0x2B50},
	{0x2B55, 0x2B55},
	{0x2E80, 0x2E99},
	{0x2E9B, 0x2EF3},
	{0x2F00, 0x2FD5},
	{0x2FF0, 0x2FFB},
	{0x3000, 0x3000},
	{0x3001, 0x3003},
	{0x3004, 0x3004},
	{0x3005, 0x3005},
	{0x3006, 0x3006},
	{0x3007, 0x3007},
	{0x3008, 0x3008},
	{0x3009, 0x3009},
	{0x300A, 0x300A},
	{0x300B, 0x300B},
	{0x300C, 0x300C},
	{0x300D, 0x300D},
	{0x300E, 0x300E},
	{0x300F, 0x300F},
	{0x3010, 0x3010},
	{0x3011, 0x3011},
	{0x3012, 0x3013},
	{0x3014, 0x3014},
	{0x3015, 0x3015},
	{0x3016, 0x3016},
	{0x3017, 0x3017},
	{0x3018, 0x3018},
	{0x3019, 0x3019},
	{0x301A, 0x301A},
	{0x301B, 0x301B},
	{0x301C, 0x301C},
	{0x301D, 0x301D},
	{0x301E, 0x301F},
	{0x3020, 0x3020},
	{0x3021, 0x3029},
	{0x302A, 0x302D},
	{0x302E, 0x302F},
	{0x3030, 0x3030},
	{0x3031, 0x3035},
	{0x3036, 0x3037},
	{0x3038, 0x303A},
	{0x303B, 0x303B},
	{0x303C, 0x303C},
	{0x303D, 0x303D},
	{0x303E, 0x303E},
	{0x3041, 0x3096},
	{0x3099, 0x309A},
	{0x309B, 0x309C},
	{0x309D, 0x309E},
	{0x309F, 0x309F},
	{0x30A0, 0x30A0},
	{0x30A1, 0x30FA},
	{0x30FB, 0x30FB},
	{0x30FC, 0x30FE},
	{0x30FF, 0x30FF},
	{0x3105, 0x312E},
	{0x3131, 0x318E},
	{0x3190, 0x3191},
	{0x3192, 0x3195},
	{0x3196, 0x319F},
	{0x31A0, 0x31BA},
	{0x31C0, 0x31E3},
	{0x31F0, 0x31FF},
	{0x3200, 0x321E},
	{0x3220, 0x3229},
	{0x322A, 0x3247},
	{0x3250, 0x3250},
	{0x3251, 0x325F},
	{0x3260, 0x327F},
	{0x3280, 0x3289},
	{0x328A, 0x32B0},
	{0x32B1, 0x32BF},
	{0x32C0, 0x32FE},
	{0x3300, 0x33FF},
	{0x3400, 0x4DB5},
	{0x4DB6, 0x4DBF},
	{0x4E00, 0x9FEA},
	{0x9FEB, 0x9FFF},
	{0xA000, 0xA014},
	{0xA015, 0xA015},
	{0xA016, 0xA48C},
	{0xA490, 0xA4C6},
	{0xA960, 0xA97C},
	{0xAC00, 0xD7A3},
	{0xF900, 0xFA6D},
	{0xFA6E, 0xFA6F},
	{0xFA70, 0xFAD9},
	{0xFADA, 0xFAFF},
	{0xFE10, 0xFE16},
	{0xFE17, 0xFE17},
	{0xFE18, 0xFE18},
	{0xFE19, 0xFE19},
	{0xFE30, 0xFE30},
	{0xFE31, 0xFE32},
	{0xFE33, 0xFE34},
	{0xFE35, 0xFE35},
	{0xFE36, 0xFE36},
	{0xFE37, 0xFE37},
	{0xFE38, 0xFE38},
	{0xFE39, 0xFE39},
	{0xFE3A, 0xFE3A},
	{0xFE3B, 0xFE3B},
	{0xFE3C, 0xFE3C},
	{0xFE3D, 0xFE3D},
	{0xFE3E, 0xFE3E},
	{0xFE3F, 0xFE3F},
	{0xFE40, 0xFE40},
	{0xFE41, 0xFE41},
	{0xFE42, 0xFE42},
	{0xFE43, 0xFE43},
	{0xFE44, 0xFE44},
	{0xFE45, 0xFE46},
	{0xFE47, 0xFE47},
	{0xFE48, 0xFE48},
	{0xFE49, 0xFE4C},
	{0xFE4D, 0xFE4F},
	{0xFE50, 0xFE52},
	{0xFE54, 0xFE57},
	{0xFE58, 0xFE58},
	{0xFE59, 0xFE59},
	{0xFE5A, 0xFE5A},
	{0xFE5B, 0xFE5B},
	{0xFE5C, 0xFE5C},
	{0xFE5D, 0xFE5D},
	{0xFE5E, 0xFE5E},
	{0xFE5F, 0xFE61},
	{0xFE62, 0xFE62},
	{0xFE63, 0xFE63},
	{0xFE64, 0xFE66},
	{0xFE68, 0xFE68},
	{0xFE69, 0xFE69},
	{0xFE6A, 0xFE6B},
	{0xFF01, 0xFF03},
	{0xFF04, 0xFF04},
	{0xFF05, 0xFF07},
	{0xFF08, 0xFF08},
	{0xFF09, 0xFF09},
	{0xFF0A, 0xFF0A},
	{0xFF0B, 0xFF0B},
	{0xFF0C, 0xFF0C},
	{0xFF0D, 0xFF0D},
	{0xFF0E, 0xFF0F},
	{0xFF10, 0xFF19},
	{0xFF1A, 0xFF1B},
	{0xFF1C, 0xFF1E},
	{0xFF1F, 0xFF20},
	{0xFF21, 0xFF3A},
	{0xFF3B, 0xFF3B},
	{0xFF3C, 0xFF3C},
	{0xFF3D, 0xFF3D},
	{0xFF3E, 0xFF3E},
	{0xFF3F, 0xFF3F},
	{0xFF40, 0xFF40},
	{0xFF41, 0xFF5A},
	{0xFF5B, 0xFF5B},
	{0xFF5C, 0xFF5C},
	{0xFF5D, 0xFF5D},
	{0xFF5E, 0xFF5E},
	{0xFF5F, 0xFF5F},
	{0xFF60, 0xFF60},
	{0xFFE0, 0xFFE1},
	{0xFFE2, 0xFFE2},
	{0xFFE3, 0xFFE3},
	{0xFFE4, 0xFFE4},
	{0xFFE5, 0xFFE6},
	{0x16FE0, 0x16FE1},
	{0x17000, 0x187EC},
	{0x18800, 0x18AF2},
	{0x1B000, 0x1B0FF},
	{0x1B100, 0x1B11E},
	{0x1B170, 0x1B2FB},
	{0x1F004, 0x1F004},
	{0x1F0CF, 0x1F0CF},
	{0x1F18E, 0x1F18E},
	{0x1F191, 0x1F19A},
	{0x1F200, 0x1F202},
	{0x1F210, 0x1F23B},
	{0x1F240, 0x1F248},
	{0x1F250, 0x1F251},
	{0x1F260, 0x1F265},
	{0x1F300, 0x1F320},
	{0x1F32D, 0x1F335},
	{0x1F337, 0x1F37C},
	{0x1F37E, 0x1F393},
	{0x1F3A0, 0x1F3CA},
	{0x1F3CF, 0x1F3D3},
	{0x1F3E0, 0x1F3F0},
	{0x1F3F4, 0x1F3F4},
	{0x1F3F8, 0x1F3FA},
	{0x1F3FB, 0x1F3FF},
	{0x1F400, 0x1F43E},
	{0x1F440, 0x1F440},
	{0x1F442, 0x1F4FC},
	{0x1F4FF, 0x1F53D},
	{0x1F54B, 0x1F54E},
	{0x1F550, 0x1F567},
	{0x1F57A, 0x1F57A},
	{0x1F595, 0x1F596},
	{0x1F5A4, 0x1F5A4},
	{0x1F5FB, 0x1F5FF},
	{0x1F600, 0x1F64F},
	{0x1F680, 0x1F6C5},
	{0x1F6CC, 0x1F6CC},
	{0x1F6D0, 0x1F6D2},
	{0x1F6EB, 0x1F6EC},
	{0x1F6F4, 0x1F6F8},
	{0x1F910, 0x1F93E},
	{0x1F940, 0x1F94C},
	{0x1F950, 0x1F96B},
	{0x1F980, 0x1F997},
	{0x1F9C0, 0x1F9C0},
	{0x1F9D0, 0x1F9E6},
	{0x20000, 0x2A6D6},
	{0x2A6D7, 0x2A6FF},
	{0x2A700, 0x2B734},
	{0x2B735, 0x2B73F},
	{0x2B740, 0x2B81D},
	{0x2B81E, 0x2B81F},
	{0x2B820, 0x2CEA1},
	{0x2CEA2, 0x2CEAF},
	{0x2CEB0, 0x2EBE0},
	{0x2EBE1, 0x2F7FF},
	{0x2F800, 0x2FA1D},
	{0x2FA1E, 0x2FFFD},
	{0x30000, 0x3FFFD},
};
static const size_t double_width_len = sizeof(double_width)/sizeof(double_width[0]);

// A sorted list of ranges of Unicode codepoints of zero-width characters
static const unsigned int zero_width[][2] = {
	{0x0, 0x0},
	{0xAD, 0xAD},
	{0x300, 0x36F},
	{0x483, 0x489},
	{0x591, 0x5BD},
	{0x5BF, 0x5BF},
	{0x5C1, 0x5C2},
	{0x5C4, 0x5C5},
	{0x5C7, 0x5C7},
	{0x600, 0x605},
	{0x610, 0x61A},
	{0x61C, 0x61C},
	{0x64B, 0x65F},
	{0x670, 0x670},
	{0x6D6, 0x6DD},
	{0x6DF, 0x6E4},
	{0x6E7, 0x6E8},
	{0x6EA, 0x6ED},
	{0x70F, 0x70F},
	{0x711, 0x711},
	{0x730, 0x74A},
	{0x7A6, 0x7B0},
	{0x7EB, 0x7F3},
	{0x816, 0x819},
	{0x81B, 0x823},
	{0x825, 0x827},
	{0x829, 0x82D},
	{0x859, 0x85B},
	{0x8D4, 0x902},
	{0x93A, 0x93A},
	{0x93C, 0x93C},
	{0x941, 0x948},
	{0x94D, 0x94D},
	{0x951, 0x957},
	{0x962, 0x963},
	{0x981, 0x981},
	{0x9BC, 0x9BC},
	{0x9C1, 0x9C4},
	{0x9CD, 0x9CD},
	{0x9E2, 0x9E3},
	{0xA01, 0xA02},
	{0xA3C, 0xA3C},
	{0xA41, 0xA42},
	{0xA47, 0xA48},
	{0xA4B, 0xA4D},
	{0xA51, 0xA51},
	{0xA70, 0xA71},
	{0xA75, 0xA75},
	{0xA81, 0xA82},
	{0xABC, 0xABC},
	{0xAC1, 0xAC5},
	{0xAC7, 0xAC8},
	{0xACD, 0xACD},
	{0xAE2, 0xAE3},
	{0xAFA, 0xAFF},
	{0xB01, 0xB01},
	{0xB3C, 0xB3C},
	{0xB3F, 0xB3F},
	{0xB41, 0xB44},
	{0xB4D, 0xB4D},
	{0xB56, 0xB56},
	{0xB62, 0xB63},
	{0xB82, 0xB82},
	{0xBC0, 0xBC0},
	{0xBCD, 0xBCD},
	{0xC00, 0xC00},
	{0xC3E, 0xC40},
	{0xC46, 0xC48},
	{0xC4A, 0xC4D},
	{0xC55, 0xC56},
	{0xC62, 0xC63},
	{0xC81, 0xC81},
	{0xCBC, 0xCBC},
	{0xCBF, 0xCBF},
	{0xCC6, 0xCC6},
	{0xCCC, 0xCCD},
	{0xCE2, 0xCE3},
	{0xD00, 0xD01},
	{0xD3B, 0xD3C},
	{0xD41, 0xD44},
	{0xD4D, 0xD4D},
	{0xD62, 0xD63},
	{0xDCA, 0xDCA},
	{0xDD2, 0xDD4},
	{0xDD6, 0xDD6},
	{0xE31, 0xE31},
	{0xE34, 0xE3A},
	{0xE47, 0xE4E},
	{0xEB1, 0xEB1},
	{0xEB4, 0xEB9},
	{0xEBB, 0xEBC},
	{0xEC8, 0xECD},
	{0xF18, 0xF19},
	{0xF35, 0xF35},
	{0xF37, 0xF37},
	{0xF39, 0xF39},
	{0xF71, 0xF7E},
	{0xF80, 0xF84},
	{0xF86, 0xF87},
	{0xF8D, 0xF97},
	{0xF99, 0xFBC},
	{0xFC6, 0xFC6},
	{0x102D, 0x1030},
	{0x1032, 0x1037},
	{0x1039, 0x103A},
	{0x103D, 0x103E},
	{0x1058, 0x1059},
	{0x105E, 0x1060},
	{0x1071, 0x1074},
	{0x1082, 0x1082},
	{0x1085, 0x1086},
	{0x108D, 0x108D},
	{0x109D, 0x109D},
	{0x1160, 0x11FF},
	{0x135D, 0x135F},
	{0x1712, 0x1714},
	{0x1732, 0x1734},
	{0x1752, 0x1753},
	{0x1772, 0x1773},
	{0x17B4, 0x17B5},
	{0x17B7, 0x17BD},
	{0x17C6, 0x17C6},
	{0x17C9, 0x17D3},
	{0x17DD, 0x17DD},
	{0x180B, 0x180E},
	{0x1885, 0x1886},
	{0x18A9, 0x18A9},
	{0x1920, 0x1922},
	{0x1927, 0x1928},
	{0x1932, 0x1932},
	{0x1939, 0x193B},
	{0x1A17, 0x1A18},
	{0x1A1B, 0x1A1B},
	{0x1A56, 0x1A56},
	{0x1A58, 0x1A5E},
	{0x1A60, 0x1A60},
	{0x1A62, 0x1A62},
	{0x1A65, 0x1A6C},
	{0x1A73, 0x1A7C},
	{0x1A7F, 0x1A7F},
	{0x1AB0, 0x1ABE},
	{0x1B00, 0x1B03},
	{0x1B34, 0x1B34},
	{0x1B36, 0x1B3A},
	{0x1B3C, 0x1B3C},
	{0x1B42, 0x1B42},
	{0x1B6B, 0x1B73},
	{0x1B80, 0x1B81},
	{0x1BA2, 0x1BA5},
	{0x1BA8, 0x1BA9},
	{0x1BAB, 0x1BAD},
	{0x1BE6, 0x1BE6},
	{0x1BE8, 0x1BE9},
	{0x1BED, 0x1BED},
	{0x1BEF, 0x1BF1},
	{0x1C2C, 0x1C33},
	{0x1C36, 0x1C37},
	{0x1CD0, 0x1CD2},
	{0x1CD4, 0x1CE0},
	{0x1CE2, 0x1CE8},
	{0x1CED, 0x1CED},
	{0x1CF4, 0x1CF4},
	{0x1CF8, 0x1CF9},
	{0x1DC0, 0x1DF9},
	{0x1DFB, 0x1DFF},
	{0x200B, 0x200F},
	{0x202A, 0x202E},
	{0x2060, 0x2064},
	{0x2066, 0x206F},
	{0x20D0, 0x20F0},
	{0x2CEF, 0x2CF1},
	{0x2D7F, 0x2D7F},
	{0x2DE0, 0x2DFF},
	{0x302A, 0x302D},
	{0x3099, 0x309A},
	{0xA66F, 0xA672},
	{0xA674, 0xA67D},
	{0xA69E, 0xA69F},
	{0xA6F0, 0xA6F1},
	{0xA802, 0xA802},
	{0xA806, 0xA806},
	{0xA80B, 0xA80B},
	{0xA825, 0xA826},
	{0xA8C4, 0xA8C5},
	{0xA8E0, 0xA8F1},
	{0xA926, 0xA92D},
	{0xA947, 0xA951},
	{0xA980, 0xA982},
	{0xA9B3, 0xA9B3},
	{0xA9B6, 0xA9B9},
	{0xA9BC, 0xA9BC},
	{0xA9E5, 0xA9E5},
	{0xAA29, 0xAA2E},
	{0xAA31, 0xAA32},
	{0xAA35, 0xAA36},
	{0xAA43, 0xAA43},
	{0xAA4C, 0xAA4C},
	{0xAA7C, 0xAA7C},
	{0xAAB0, 0xAAB0},
	{0xAAB2, 0xAAB4},
	{0xAAB7, 0xAAB8},
	{0xAABE, 0xAABF},
	{0xAAC1, 0xAAC1},
	{0xAAEC, 0xAAED},
	{0xAAF6, 0xAAF6},
	{0xABE5, 0xABE5},
	{0xABE8, 0xABE8},
	{0xABED, 0xABED},
	{0xD7B0, 0xD7C6},
	{0xD7CB, 0xD7FB},
	{0xFB1E, 0xFB1E},
	{0xFE00, 0xFE0F},
	{0xFE20, 0xFE2F},
	{0xFEFF, 0xFEFF},
	{0xFFF9, 0xFFFB},
	{0x101FD, 0x101FD},
	{0x102E0, 0x102E0},
	{0x10376, 0x1037A},
	{0x10A01, 0x10A03},
	{0x10A05, 0x10A06},
	{0x10A0C, 0x10A0F},
	{0x10A38, 0x10A3A},
	{0x10A3F, 0x10A3F},
	{0x10AE5, 0x10AE6},
	{0x11001, 0x11001},
	{0x11038, 0x11046},
	{0x1107F, 0x11081},
	{0x110B3, 0x110B6},
	{0x110B9, 0x110BA},
	{0x110BD, 0x110BD},
	{0x11100, 0x11102},
	{0x11127, 0x1112B},
	{0x1112D, 0x11134},
	{0x11173, 0x11173},
	{0x11180, 0x11181},
	{0x111B6, 0x111BE},
	{0x111CA, 0x111CC},
	{0x1122F, 0x11231},
	{0x11234, 0x11234},
	{0x11236, 0x11237},
	{0x1123E, 0x1123E},
	{0x112DF, 0x112DF},
	{0x112E3, 0x112EA},
	{0x11300, 0x11301},
	{0x1133C, 0x1133C},
	{0x11340, 0x11340},
	{0x11366, 0x1136C},
	{0x11370, 0x11374},
	{0x11438, 0x1143F},
	{0x11442, 0x11444},
	{0x11446, 0x11446},
	{0x114B3, 0x114B8},
	{0x114BA, 0x114BA},
	{0x114BF, 0x114C0},
	{0x114C2, 0x114C3},
	{0x115B2, 0x115B5},
	{0x115BC, 0x115BD},
	{0x115BF, 0x115C0},
	{0x115DC, 0x115DD},
	{0x11633, 0x1163A},
	{0x1163D, 0x1163D},
	{0x1163F, 0x11640},
	{0x116AB, 0x116AB},
	{0x116AD, 0x116AD},
	{0x116B0, 0x116B5},
	{0x116B7, 0x116B7},
	{0x1171D, 0x1171F},
	{0x11722, 0x11725},
	{0x11727, 0x1172B},
	{0x11A01, 0x11A06},
	{0x11A09, 0x11A0A},
	{0x11A33, 0x11A38},
	{0x11A3B, 0x11A3E},
	{0x11A47, 0x11A47},
	{0x11A51, 0x11A56},
	{0x11A59, 0x11A5B},
	{0x11A8A, 0x11A96},
	{0x11A98, 0x11A99},
	{0x11C30, 0x11C36},
	{0x11C38, 0x11C3D},
	{0x11C3F, 0x11C3F},
	{0x11C92, 0x11CA7},
	{0x11CAA, 0x11CB0},
	{0x11CB2, 0x11CB3},
	{0x11CB5, 0x11CB6},
	{0x11D31, 0x11D36},
	{0x11D3A, 0x11D3A},
	{0x11D3C, 0x11D3D},
	{0x11D3F, 0x11D45},
	{0x11D47, 0x11D47},
	{0x16AF0, 0x16AF4},
	{0x16B30, 0x16B36},
	{0x16F8F, 0x16F92},
	{0x1BC9D, 0x1BC9E},
	{0x1BCA0, 0x1BCA3},
	{0x1D167, 0x1D169},
	{0x1D173, 0x1D182},
	{0x1D185, 0x1D18B},
	{0x1D1AA, 0x1D1AD},
	{0x1D242, 0x1D244},
	{0x1DA00, 0x1DA36},
	{0x1DA3B, 0x1DA6C},
	{0x1DA75, 0x1DA75},
	{0x1DA84, 0x1DA84},
	{0x1DA9B, 0x1DA9F},
	{0x1DAA1, 0x1DAAF},
	{0x1E000, 0x1E006},
	{0x1E008, 0x1E018},
	{0x1E01B, 0x1E021},
	{0x1E023, 0x1E024},
	{0x1E026, 0x1E02A},
	{0x1E8D0, 0x1E8D6},
	{0x1E944, 0x1E94A},
	{0xE0001, 0xE0001},
	{0xE0020, 0xE007F},
};
static const size_t zero_width_len = sizeof(zero_width)/sizeof(zero_width[0]);

#endif
