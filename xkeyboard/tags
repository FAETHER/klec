!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BORDER	nullkeycaps.h	57;"	d
BORDER	xkeycaps.h	88;"	d
BUTTONMASK	xkeyboard.c	43;"	d	file:
CLOSING	xkeyboard.c	/^enum { NORMAL, CLOSING } closingstate;$/;"	e	enum:__anon1	file:
MAX_KEYS	xkeyboard.h	58;"	d
MOUSEMASK	xkeyboard.c	44;"	d	file:
NORMAL	xkeyboard.c	/^enum { NORMAL, CLOSING } closingstate;$/;"	e	enum:__anon1	file:
NUM_BORDERS	xkeyboard.h	35;"	d
NUM_CONSTPGM	xkeycaps.h	87;"	d
NUM_KEYCAPS	nullkeycaps.h	56;"	d
NUM_KEYCAPS	xkeycaps.h	71;"	d
__STRUCT_PGMDATA__	keypics/backslash.h	8;"	d
__STRUCT_PGMDATA__	keypics/backspace.h	8;"	d
__STRUCT_PGMDATA__	keypics/capslock.h	8;"	d
__STRUCT_PGMDATA__	keypics/closewindow_down.h	8;"	d
__STRUCT_PGMDATA__	keypics/closewindow_up.h	8;"	d
__STRUCT_PGMDATA__	keypics/control.h	8;"	d
__STRUCT_PGMDATA__	keypics/darkkey.h	8;"	d
__STRUCT_PGMDATA__	keypics/enter.h	8;"	d
__STRUCT_PGMDATA__	keypics/glassdown.h	8;"	d
__STRUCT_PGMDATA__	keypics/glassup.h	8;"	d
__STRUCT_PGMDATA__	keypics/keypadlong.h	8;"	d
__STRUCT_PGMDATA__	keypics/keypadzero.h	8;"	d
__STRUCT_PGMDATA__	keypics/lightkey.h	8;"	d
__STRUCT_PGMDATA__	keypics/shiftleft.h	8;"	d
__STRUCT_PGMDATA__	keypics/shiftright.h	8;"	d
__STRUCT_PGMDATA__	keypics/spacebar.h	8;"	d
__STRUCT_PGMDATA__	keypics/tab.h	8;"	d
__STRUCT_PGMDATA__	keypics/texture.h	8;"	d
__STRUCT_PGMDATA__	keypics/tmlogo.h	8;"	d
__XKEYBOARD_H__	xkeyboard.h	23;"	d
__XKEYCAPS_H__	nullkeycaps.h	23;"	d
__XKEYCAPS_H__	xkeycaps.h	23;"	d
activate_keyboard	xkeyboard.c	/^void activate_keyboard(int state)$/;"	f
attribs	xkeyboard.c	/^XWindowAttributes attribs;$/;"	v
backslashdata	keypics/backslash.h	/^unsigned char backslashdata[2072] = {$/;"	v
backslashpgm	keypics/backslash.h	/^struct pgmdata backslashpgm = {$/;"	v	typeref:struct:pgmdata
backspacedata	keypics/backspace.h	/^unsigned char backspacedata[2738] = {$/;"	v
backspacepgm	keypics/backspace.h	/^struct pgmdata backspacepgm = {$/;"	v	typeref:struct:pgmdata
capslockdata	keypics/capslock.h	/^unsigned char capslockdata[2405] = {$/;"	v
capslockpgm	keypics/capslock.h	/^struct pgmdata capslockpgm = {$/;"	v	typeref:struct:pgmdata
closecursor	xkeyboard.c	/^Cursor mycursor, closecursor;$/;"	v
closewindow	xkeyboard.c	/^ctrlwin, lockwin, closewindow,$/;"	v
closewindow_downdata	keypics/closewindow_down.h	/^unsigned char closewindow_downdata[256] = {$/;"	v
closewindow_downpgm	keypics/closewindow_down.h	/^struct pgmdata closewindow_downpgm = {$/;"	v	typeref:struct:pgmdata
closewindow_updata	keypics/closewindow_up.h	/^unsigned char closewindow_updata[256] = {$/;"	v
closewindow_uppgm	keypics/closewindow_up.h	/^struct pgmdata closewindow_uppgm = {$/;"	v	typeref:struct:pgmdata
closingstate	xkeyboard.c	/^enum { NORMAL, CLOSING } closingstate;$/;"	v	typeref:enum:__anon1
controldata	keypics/control.h	/^unsigned char controldata[1702] = {$/;"	v
controlpgm	keypics/control.h	/^struct pgmdata controlpgm = {$/;"	v	typeref:struct:pgmdata
cpgm	xkeyboard.c	/^Pixmap cpgm[NUM_CONSTPGM];$/;"	v
cpgmlist	xkeycaps.h	/^struct scaledata cpgmlist$/;"	s
create_keys	xkeyboard.c	/^void create_keys(void)$/;"	f
create_pixmaps	xkeyboard.c	/^void create_pixmaps(void)$/;"	f
ctrlwin	xkeyboard.c	/^ctrlwin, lockwin, closewindow,$/;"	v
darkkeydata	keypics/darkkey.h	/^unsigned char darkkeydata[1369] = {$/;"	v
darkkeypgm	keypics/darkkey.h	/^struct pgmdata darkkeypgm = {$/;"	v	typeref:struct:pgmdata
data	keypics/backslash.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/backspace.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/capslock.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/closewindow_down.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/closewindow_up.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/control.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/darkkey.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/enter.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/glassdown.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/glassup.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/keypadlong.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/keypadzero.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/lightkey.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/shiftleft.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/shiftright.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/spacebar.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/tab.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/texture.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
data	keypics/tmlogo.h	/^	unsigned char *data;$/;"	m	struct:pgmdata
do_button_event	xkeyboard.c	/^void do_button_event(void)$/;"	f
do_control	xkeyboard.c	/^void do_control(void)$/;"	f
dpy	xkeyboard.c	/^Display *dpy;$/;"	v
enterdata	keypics/enter.h	/^unsigned char enterdata[3071] = {$/;"	v
enterpgm	keypics/enter.h	/^struct pgmdata enterpgm = {$/;"	v	typeref:struct:pgmdata
font_struct	xkeyboard.c	/^XFontStruct *font_struct;$/;"	v
gcvals	xkeyboard.c	/^XGCValues gcvals;$/;"	v
get_keyboard_mapping	xkeyboard.c	/^int get_keyboard_mapping(void)$/;"	f
getrootptr	xkeyboard.c	/^getrootptr(int *x, int *y)$/;"	f
glassdowndata	keypics/glassdown.h	/^unsigned char glassdowndata[1600] = {$/;"	v
glassdownpgm	keypics/glassdown.h	/^struct pgmdata glassdownpgm = {$/;"	v	typeref:struct:pgmdata
glassupdata	keypics/glassup.h	/^unsigned char glassupdata[1600] = {$/;"	v
glassuppgm	keypics/glassup.h	/^struct pgmdata glassuppgm = {$/;"	v	typeref:struct:pgmdata
h	xkeyboard.h	/^	int scancode, x, y, w, h, p;$/;"	m	struct:mykeys
h	xkeyboard.h	/^	int x, y, w, h;$/;"	m	struct:myborders
h	xkeycaps.h	/^	int w, h;$/;"	m	struct:scaledata
handle_error	xkeyboard.c	/^static int handle_error(Display *d, XErrorEvent *event)$/;"	f	file:
height	keypics/backslash.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/backspace.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/capslock.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/closewindow_down.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/closewindow_up.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/control.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/darkkey.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/enter.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/glassdown.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/glassup.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/keypadlong.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/keypadzero.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/lightkey.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/shiftleft.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/shiftright.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/spacebar.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/tab.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/texture.h	/^	int width, height;$/;"	m	struct:pgmdata
height	keypics/tmlogo.h	/^	int width, height;$/;"	m	struct:pgmdata
init_display	xkeyboard.c	/^void init_display(int argc, char **argv)$/;"	f
keyboard_active	xkeyboard.c	/^int keyboard_active;$/;"	v
keypadlongdata	keypics/keypadlong.h	/^unsigned char keypadlongdata[2738] = {$/;"	v
keypadlongpgm	keypics/keypadlong.h	/^struct pgmdata keypadlongpgm = {$/;"	v	typeref:struct:pgmdata
keypadzerodata	keypics/keypadzero.h	/^unsigned char keypadzerodata[2738] = {$/;"	v
keypadzeropgm	keypics/keypadzero.h	/^struct pgmdata keypadzeropgm = {$/;"	v	typeref:struct:pgmdata
keystate	xkeyboard.c	/^int keystate;$/;"	v
lbcorner_r	keypics/lbcorner.h	/^static unsigned char lbcorner_r[] = {$/;"	v
lbcornerpgm	keypics/lbcorner.h	/^struct pgmdata lbcornerpgm = {$/;"	v	typeref:struct:pgmdata
lbcornerwin	xkeyboard.c	/^movewin, root, lbcornerwin;$/;"	v
lightkeydata	keypics/lightkey.h	/^unsigned char lightkeydata[1369] = {$/;"	v
lightkeypgm	keypics/lightkey.h	/^struct pgmdata lightkeypgm = {$/;"	v	typeref:struct:pgmdata
lock_raw	keypics/lockdown.h	/^static unsigned char lock_raw[] = {$/;"	v
lockdownpgm	keypics/lockdown.h	/^struct pgmdata lockdownpgm = {$/;"	v	typeref:struct:pgmdata
lockmod	xkeyboard.c	/^int lockmod;$/;"	v
lockup_raw	keypics/lockup.h	/^static unsigned char lockup_raw[] = {$/;"	v
lockuppgm	keypics/lockup.h	/^struct pgmdata lockuppgm = {$/;"	v	typeref:struct:pgmdata
lockwin	xkeyboard.c	/^ctrlwin, lockwin, closewindow,$/;"	v
main	xkeyboard.c	/^int main(int argc, char **argv)$/;"	f
mb	xkeyboard.h	/^struct myborders mb[NUM_BORDERS] = {$/;"	v	typeref:struct:myborders
modifiermap	xkeyboard.c	/^int modifiermap[8][16];$/;"	v
modindex	xkeyboard.c	/^int modindex[8];$/;"	v
move_down_raw	keypics/move_down.h	/^static unsigned char move_down_raw[] = {$/;"	v
move_up_raw	keypics/move_up.h	/^static unsigned char move_up_raw[] = {$/;"	v
movebutton	xkeyboard.c	/^movebutton(int xpos, int ypos)$/;"	f
movedownpgm	keypics/move_down.h	/^struct pgmdata movedownpgm = {$/;"	v	typeref:struct:pgmdata
moveuppgm	keypics/move_up.h	/^struct pgmdata moveuppgm = {$/;"	v	typeref:struct:pgmdata
movewin	xkeyboard.c	/^movewin, root, lbcornerwin;$/;"	v
myact	xkeyboard.c	/^GC mygc, mygcled, myact;$/;"	v
myattribs	xkeyboard.c	/^XSetWindowAttributes myattribs;	\/* for window creation *\/$/;"	v
mybackground	xkeyboard.c	/^unsigned long myforeground, mybackground;$/;"	v
myborder	xkeyboard.c	/^Window myborder[NUM_BORDERS];$/;"	v
myborders	xkeyboard.h	/^struct myborders$/;"	s
mycursor	xkeyboard.c	/^Cursor mycursor, closecursor;$/;"	v
myevent	xkeyboard.c	/^XEvent myevent;$/;"	v
myevents	xkeyboard.c	/^long myevents;$/;"	v
myforeground	xkeyboard.c	/^unsigned long myforeground, mybackground;$/;"	v
mygc	xkeyboard.c	/^GC mygc, mygcled, myact;$/;"	v
mygcled	xkeyboard.c	/^GC mygc, mygcled, myact;$/;"	v
myhint	xkeyboard.c	/^XSizeHints myhint;$/;"	v
mykc	xkeyboard.c	/^Pixmap mykc[NUM_KEYCAPS];$/;"	v
mykclist	nullkeycaps.h	/^struct pgmdata *mykclist[] = {$/;"	v	typeref:struct:pgmdata
mykclist	xkeycaps.h	/^struct scaledata mykclist[] = {$/;"	v	typeref:struct:scaledata
mykey	xkeyboard.c	/^Window mywindow, mykey[MAX_KEYS], $/;"	v
mykeys	xkeyboard.h	/^struct mykeys$/;"	s
myscreen	xkeyboard.c	/^int myscreen;$/;"	v
mywindow	xkeyboard.c	/^Window mywindow, mykey[MAX_KEYS], $/;"	v
nullkeydata	nullkeycaps.h	/^unsigned char nullkeydata[2] = {$/;"	v
nullkeypgm	nullkeycaps.h	/^struct pgmdata nullkeypgm = {$/;"	v	typeref:struct:pgmdata
ox	xkeyboard.c	/^int zoom = 0, ox, oy, sn, sd;$/;"	v
oy	xkeyboard.c	/^int zoom = 0, ox, oy, sn, sd;$/;"	v
p	xkeyboard.h	/^	int scancode, x, y, w, h, p;$/;"	m	struct:mykeys
pgm	xkeycaps.h	/^	struct pgmdata *pgm;$/;"	m	struct:scaledata	typeref:struct:scaledata::pgmdata
pgmdata	keypics/backslash.h	/^struct pgmdata$/;"	s
pgmdata	keypics/backspace.h	/^struct pgmdata$/;"	s
pgmdata	keypics/capslock.h	/^struct pgmdata$/;"	s
pgmdata	keypics/closewindow_down.h	/^struct pgmdata$/;"	s
pgmdata	keypics/closewindow_up.h	/^struct pgmdata$/;"	s
pgmdata	keypics/control.h	/^struct pgmdata$/;"	s
pgmdata	keypics/darkkey.h	/^struct pgmdata$/;"	s
pgmdata	keypics/enter.h	/^struct pgmdata$/;"	s
pgmdata	keypics/glassdown.h	/^struct pgmdata$/;"	s
pgmdata	keypics/glassup.h	/^struct pgmdata$/;"	s
pgmdata	keypics/keypadlong.h	/^struct pgmdata$/;"	s
pgmdata	keypics/keypadzero.h	/^struct pgmdata$/;"	s
pgmdata	keypics/lightkey.h	/^struct pgmdata$/;"	s
pgmdata	keypics/shiftleft.h	/^struct pgmdata$/;"	s
pgmdata	keypics/shiftright.h	/^struct pgmdata$/;"	s
pgmdata	keypics/spacebar.h	/^struct pgmdata$/;"	s
pgmdata	keypics/tab.h	/^struct pgmdata$/;"	s
pgmdata	keypics/texture.h	/^struct pgmdata$/;"	s
pgmdata	keypics/tmlogo.h	/^struct pgmdata$/;"	s
redraw_window	xkeyboard.c	/^void redraw_window(Window exposed)$/;"	f
resize_keys	xkeyboard.c	/^void resize_keys(void)$/;"	f
root	xkeyboard.c	/^movewin, root, lbcornerwin;$/;"	v
scale_pic	xkeyboard.c	/^Pixmap scale_pic(struct scaledata *p, int kw, int kh, int num)$/;"	f
scaledata	xkeycaps.h	/^struct scaledata$/;"	s
scancode	xkeyboard.h	/^	int scancode, x, y, w, h, p;$/;"	m	struct:mykeys
scanname	xkeyboard.c	/^char *scanname[8][256];$/;"	v
screenheight	xkeyboard.c	/^int screenwidth, screenheight;$/;"	v
screenwidth	xkeyboard.c	/^int screenwidth, screenheight;$/;"	v
sd	xkeyboard.c	/^int zoom = 0, ox, oy, sn, sd;$/;"	v
sendkey	xkeyboard.c	/^int sendkey;$/;"	v
shiftleftdata	keypics/shiftleft.h	/^unsigned char shiftleftdata[3071] = {$/;"	v
shiftleftpgm	keypics/shiftleft.h	/^struct pgmdata shiftleftpgm = {$/;"	v	typeref:struct:pgmdata
shiftrightdata	keypics/shiftright.h	/^unsigned char shiftrightdata[3774] = {$/;"	v
shiftrightpgm	keypics/shiftright.h	/^struct pgmdata shiftrightpgm = {$/;"	v	typeref:struct:pgmdata
sn	xkeyboard.c	/^int zoom = 0, ox, oy, sn, sd;$/;"	v
spacebardata	keypics/spacebar.h	/^unsigned char spacebardata[8732] = {$/;"	v
spacebarpgm	keypics/spacebar.h	/^struct pgmdata spacebarpgm = {$/;"	v	typeref:struct:pgmdata
tabdata	keypics/tab.h	/^unsigned char tabdata[2072] = {$/;"	v
tabpgm	keypics/tab.h	/^struct pgmdata tabpgm = {$/;"	v	typeref:struct:pgmdata
texturedata	keypics/texture.h	/^unsigned char texturedata[4096] = {$/;"	v
texturepgm	keypics/texture.h	/^struct pgmdata texturepgm = {$/;"	v	typeref:struct:pgmdata
tmlogodata	keypics/tmlogo.h	/^unsigned char tmlogodata[4480] = {$/;"	v
tmlogopgm	keypics/tmlogo.h	/^struct pgmdata tmlogopgm = {$/;"	v	typeref:struct:pgmdata
tmpbuf	xkeyboard.c	/^char tmpbuf[16];$/;"	v
w	xkeyboard.h	/^	int scancode, x, y, w, h, p;$/;"	m	struct:mykeys
w	xkeyboard.h	/^	int x, y, w, h;$/;"	m	struct:myborders
w	xkeycaps.h	/^	int w, h;$/;"	m	struct:scaledata
width	keypics/backslash.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/backspace.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/capslock.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/closewindow_down.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/closewindow_up.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/control.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/darkkey.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/enter.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/glassdown.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/glassup.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/keypadlong.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/keypadzero.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/lightkey.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/shiftleft.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/shiftright.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/spacebar.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/tab.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/texture.h	/^	int width, height;$/;"	m	struct:pgmdata
width	keypics/tmlogo.h	/^	int width, height;$/;"	m	struct:pgmdata
x	xkeyboard.h	/^	int scancode, x, y, w, h, p;$/;"	m	struct:mykeys
x	xkeyboard.h	/^	int x, y, w, h;$/;"	m	struct:myborders
xk	xkeyboard.h	/^struct mykeys xk[MAX_KEYS] = {$/;"	v	typeref:struct:mykeys
y	xkeyboard.h	/^	int scancode, x, y, w, h, p;$/;"	m	struct:mykeys
y	xkeyboard.h	/^	int x, y, w, h;$/;"	m	struct:myborders
zoom	xkeyboard.c	/^int zoom = 0, ox, oy, sn, sd;$/;"	v
